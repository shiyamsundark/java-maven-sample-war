name: Build
on: 
  workflow_dispatch:
  
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#     GITHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}
    
jobs:

#   Pre-Release:
#     name: Pre-Release
#     uses: ./.github/workflows/pre-release.yml
    
  initializerunner:
    name: Intialize Runner
#     needs: Pre-Release
    uses: ./.github/workflows/action.yml
    secrets: 
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#       GITHUB_TOKEN: ${{ secrets.GHUB_TOKEN }}
             
  Build:
       needs: [initializerunner]
       runs-on: ${{ needs.initializerunner.outputs.activerunner }}
       permissions:
        contents: read
        packages: write
       steps:
          - uses: actions/checkout@v2
          - name: Set up JDK 11
            uses: actions/setup-java@v3
            with:
              java-version: '11'
              distribution: 'temurin'
              server-id: github 
              settings-path: ${{ github.workspace }} 
          - name: Build with Maven
            run: mvn -B package --file pom.xml

          - name: Publish to GitHub Packages Apache Maven
            run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
            env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#   sonar:
#     name: Test - SonarCloud Scan
#     runs-on: ${{ needs.initializerunner.outputs.activerunner }}
#     needs: [Build,initializerunner]
#     steps:
#       - uses: actions/checkout@v1
#       - name: Set up JDK 11
#         uses: actions/setup-java@v1
#         with:
#           java-version: 11.0.4
#       - name: SonarCloud Scan
#         run: mvn -B verify sonar:sonar -Dsonar.projectKey=shiyamsundark_java-maven-sample-war -Dsonar.organization=shiyamsundark -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
#   artifact:
#     name: Publish - GitHub Packages
#     runs-on: ${{ needs.initializerunner.outputs.activerunner }}
#     needs: [Build,initializerunner]
# #     permissions: 
# #         contents: read
# #         packages: write
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-java@v3
#         with:
#           java-version: '11'
#           distribution: 'adopt'
#       - name: Publish package
#         run: mvn deploy -Dserver.username=shiyamsundark -Dserver.password=${{ secrets.GIHUB_TOKEN }} -DskipTests

    
#   Sonar:
#     needs: [Build,initializerunner]
#     runs-on: ${{ needs.initializerunner.outputs.activerunner }}
#     steps:   
#       - name: Sonar Analysis
#         run: mvn -B verify sonar:sonar -Dsonar.projectKey=shiyamsundark_java-maven-sample-war -Dsonar.organization=shiyamsundark -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN     
        
#   PublishartifactonGitHubPackages:
#         needs: [Build,initializerunner]
#         runs-on: ${{ needs.initializerunner.outputs.activerunner }}
#         permissions: 
#           contents: read
#           packages: write
#         steps:
#           - uses: actions/checkout@v3
#           - uses: actions/setup-java@v3
#             with:
#               java-version: '11'
#               server-id: github
#               settings-path: ${{ github.workspace }}
#           - name: Publish package
#             run: mvn deploy
#         env:
#           GITHUB_TOKEN: ${{ secrets.GIHUB_TOKEN }}
          
#   Fortify:
#     needs: [initializerunner,Pre-Release]
#     runs-on: ubuntu-latest
#     steps:    
#       - name: Fortify Analysis
#         run: echo Starting Fortify stage!!
        
#   Post-Release:
#     name: Post-Release
#     needs: [initializerunner,Pre-Release,Build,Sonar,Fortify]
#     uses: ./.github/workflows/post-release.yml  
      
#   Declarative-Post-Actions:
#     needs: [Post-Release]
#     runs-on: ubuntu-latest
#     steps:    
#       - name: Sent Results
#         run: echo Mailing results to recipients!!        
  
#   stop_runner:
#     needs: [ Build, initializerunner,Sonar,PublishartifactonGitHubPackages,Pre-Release,Post-Release,Declarative-Post-Actions]
#     runs-on: ubuntu-latest
#     steps:
#       - run: |
#           aws ec2 stop-instances --instance-ids ${{ needs.initializerunner.outputs.activerunner }} --region us-west-2
